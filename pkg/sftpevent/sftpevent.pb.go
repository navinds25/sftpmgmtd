// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sftpevent.proto

package sftpevent

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SftpTransferConfig_TransferType int32

const (
	SftpTransferConfig_Pull SftpTransferConfig_TransferType = 0
	SftpTransferConfig_Push SftpTransferConfig_TransferType = 1
)

var SftpTransferConfig_TransferType_name = map[int32]string{
	0: "Pull",
	1: "Push",
}

var SftpTransferConfig_TransferType_value = map[string]int32{
	"Pull": 0,
	"Push": 1,
}

func (x SftpTransferConfig_TransferType) String() string {
	return proto.EnumName(SftpTransferConfig_TransferType_name, int32(x))
}

func (SftpTransferConfig_TransferType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3b12a20ecbe01572, []int{1, 0}
}

type Ack struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ack) Reset()         { *m = Ack{} }
func (m *Ack) String() string { return proto.CompactTextString(m) }
func (*Ack) ProtoMessage()    {}
func (*Ack) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b12a20ecbe01572, []int{0}
}

func (m *Ack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ack.Unmarshal(m, b)
}
func (m *Ack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ack.Marshal(b, m, deterministic)
}
func (m *Ack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ack.Merge(m, src)
}
func (m *Ack) XXX_Size() int {
	return xxx_messageInfo_Ack.Size(m)
}
func (m *Ack) XXX_DiscardUnknown() {
	xxx_messageInfo_Ack.DiscardUnknown(m)
}

var xxx_messageInfo_Ack proto.InternalMessageInfo

func (m *Ack) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Ack) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type SftpTransferConfig struct {
	Transferid           string                          `protobuf:"bytes,1,opt,name=transferid,proto3" json:"transferid,omitempty"`
	Description          string                          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Type                 SftpTransferConfig_TransferType `protobuf:"varint,3,opt,name=type,proto3,enum=sftpevent.SftpTransferConfig_TransferType" json:"type,omitempty"`
	Localfile            string                          `protobuf:"bytes,4,opt,name=localfile,proto3" json:"localfile,omitempty"`
	Remotefile           string                          `protobuf:"bytes,5,opt,name=remotefile,proto3" json:"remotefile,omitempty"`
	Localpath            string                          `protobuf:"bytes,6,opt,name=localpath,proto3" json:"localpath,omitempty"`
	Remotepath           string                          `protobuf:"bytes,7,opt,name=remotepath,proto3" json:"remotepath,omitempty"`
	Remotehost           string                          `protobuf:"bytes,8,opt,name=remotehost,proto3" json:"remotehost,omitempty"`
	Remoteport           int32                           `protobuf:"varint,9,opt,name=remoteport,proto3" json:"remoteport,omitempty"`
	Remoteuser           string                          `protobuf:"bytes,10,opt,name=remoteuser,proto3" json:"remoteuser,omitempty"`
	Remotepassword       string                          `protobuf:"bytes,11,opt,name=remotepassword,proto3" json:"remotepassword,omitempty"`
	Remotekey            string                          `protobuf:"bytes,12,opt,name=remotekey,proto3" json:"remotekey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *SftpTransferConfig) Reset()         { *m = SftpTransferConfig{} }
func (m *SftpTransferConfig) String() string { return proto.CompactTextString(m) }
func (*SftpTransferConfig) ProtoMessage()    {}
func (*SftpTransferConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b12a20ecbe01572, []int{1}
}

func (m *SftpTransferConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SftpTransferConfig.Unmarshal(m, b)
}
func (m *SftpTransferConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SftpTransferConfig.Marshal(b, m, deterministic)
}
func (m *SftpTransferConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SftpTransferConfig.Merge(m, src)
}
func (m *SftpTransferConfig) XXX_Size() int {
	return xxx_messageInfo_SftpTransferConfig.Size(m)
}
func (m *SftpTransferConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SftpTransferConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SftpTransferConfig proto.InternalMessageInfo

func (m *SftpTransferConfig) GetTransferid() string {
	if m != nil {
		return m.Transferid
	}
	return ""
}

func (m *SftpTransferConfig) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SftpTransferConfig) GetType() SftpTransferConfig_TransferType {
	if m != nil {
		return m.Type
	}
	return SftpTransferConfig_Pull
}

func (m *SftpTransferConfig) GetLocalfile() string {
	if m != nil {
		return m.Localfile
	}
	return ""
}

func (m *SftpTransferConfig) GetRemotefile() string {
	if m != nil {
		return m.Remotefile
	}
	return ""
}

func (m *SftpTransferConfig) GetLocalpath() string {
	if m != nil {
		return m.Localpath
	}
	return ""
}

func (m *SftpTransferConfig) GetRemotepath() string {
	if m != nil {
		return m.Remotepath
	}
	return ""
}

func (m *SftpTransferConfig) GetRemotehost() string {
	if m != nil {
		return m.Remotehost
	}
	return ""
}

func (m *SftpTransferConfig) GetRemoteport() int32 {
	if m != nil {
		return m.Remoteport
	}
	return 0
}

func (m *SftpTransferConfig) GetRemoteuser() string {
	if m != nil {
		return m.Remoteuser
	}
	return ""
}

func (m *SftpTransferConfig) GetRemotepassword() string {
	if m != nil {
		return m.Remotepassword
	}
	return ""
}

func (m *SftpTransferConfig) GetRemotekey() string {
	if m != nil {
		return m.Remotekey
	}
	return ""
}

type SftpTransferConfigFoo struct {
	Bar                  string   `protobuf:"bytes,1,opt,name=bar,proto3" json:"bar,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SftpTransferConfigFoo) Reset()         { *m = SftpTransferConfigFoo{} }
func (m *SftpTransferConfigFoo) String() string { return proto.CompactTextString(m) }
func (*SftpTransferConfigFoo) ProtoMessage()    {}
func (*SftpTransferConfigFoo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b12a20ecbe01572, []int{1, 0}
}

func (m *SftpTransferConfigFoo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SftpTransferConfigFoo.Unmarshal(m, b)
}
func (m *SftpTransferConfigFoo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SftpTransferConfigFoo.Marshal(b, m, deterministic)
}
func (m *SftpTransferConfigFoo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SftpTransferConfigFoo.Merge(m, src)
}
func (m *SftpTransferConfigFoo) XXX_Size() int {
	return xxx_messageInfo_SftpTransferConfigFoo.Size(m)
}
func (m *SftpTransferConfigFoo) XXX_DiscardUnknown() {
	xxx_messageInfo_SftpTransferConfigFoo.DiscardUnknown(m)
}

var xxx_messageInfo_SftpTransferConfigFoo proto.InternalMessageInfo

func (m *SftpTransferConfigFoo) GetBar() string {
	if m != nil {
		return m.Bar
	}
	return ""
}

func init() {
	proto.RegisterEnum("sftpevent.SftpTransferConfig_TransferType", SftpTransferConfig_TransferType_name, SftpTransferConfig_TransferType_value)
	proto.RegisterType((*Ack)(nil), "sftpevent.Ack")
	proto.RegisterType((*SftpTransferConfig)(nil), "sftpevent.SftpTransferConfig")
	proto.RegisterType((*SftpTransferConfigFoo)(nil), "sftpevent.SftpTransferConfig.foo")
}

func init() { proto.RegisterFile("sftpevent.proto", fileDescriptor_3b12a20ecbe01572) }

var fileDescriptor_3b12a20ecbe01572 = []byte{
	// 379 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x4d, 0x6f, 0xe2, 0x30,
	0x10, 0x86, 0x37, 0x9b, 0xf0, 0x91, 0x01, 0xb1, 0xc8, 0x5a, 0xa9, 0x16, 0x6a, 0xab, 0x28, 0x87,
	0x8a, 0x72, 0xc8, 0x81, 0xaa, 0x97, 0x1e, 0x2a, 0x01, 0x87, 0x5e, 0x51, 0xca, 0x1f, 0x08, 0xc9,
	0x04, 0x22, 0x42, 0x6c, 0xd9, 0xa6, 0x2d, 0x3f, 0xbc, 0xf7, 0x2a, 0x1f, 0x60, 0x97, 0x4a, 0xbd,
	0x79, 0x9e, 0xd7, 0xef, 0x78, 0xc6, 0x33, 0xf0, 0x4f, 0xa6, 0x8a, 0xe3, 0x1b, 0x16, 0x2a, 0xe0,
	0x82, 0x29, 0x46, 0xdc, 0x33, 0xf0, 0x1f, 0xc1, 0x9e, 0xc5, 0x3b, 0x42, 0xa1, 0xb3, 0x47, 0x29,
	0xa3, 0x0d, 0x52, 0xcb, 0xb3, 0xc6, 0x6e, 0x78, 0x0a, 0xc9, 0x7f, 0x68, 0xa1, 0x10, 0x4c, 0xd0,
	0xbf, 0x15, 0xaf, 0x03, 0xff, 0xd3, 0x06, 0xf2, 0x9a, 0x2a, 0xbe, 0x12, 0x51, 0x21, 0x53, 0x14,
	0x0b, 0x56, 0xa4, 0xd9, 0x86, 0xdc, 0x02, 0xa8, 0x86, 0x64, 0x49, 0x93, 0xc9, 0x20, 0xc4, 0x83,
	0x5e, 0x82, 0x32, 0x16, 0x19, 0x57, 0x19, 0x2b, 0x9a, 0x94, 0x26, 0x22, 0xcf, 0xe0, 0xa8, 0x23,
	0x47, 0x6a, 0x7b, 0xd6, 0x78, 0x30, 0x9d, 0x04, 0xba, 0xf4, 0x9f, 0xcf, 0x05, 0xa7, 0x70, 0x75,
	0xe4, 0x18, 0x56, 0x3e, 0x72, 0x0d, 0x6e, 0xce, 0xe2, 0x28, 0x4f, 0xb3, 0x1c, 0xa9, 0x53, 0xe5,
	0xd7, 0xa0, 0xac, 0x4f, 0xe0, 0x9e, 0x29, 0xac, 0xe4, 0x56, 0x5d, 0x9f, 0x26, 0x67, 0x37, 0x8f,
	0xd4, 0x96, 0xb6, 0x0d, 0x77, 0x09, 0xb4, 0xbb, 0x92, 0x3b, 0xa6, 0xfb, 0xbb, 0xbe, 0x65, 0x52,
	0xd1, 0xae, 0xa9, 0x97, 0xc4, 0xf0, 0x33, 0xa1, 0xa8, 0xeb, 0x59, 0xe3, 0x56, 0x68, 0x10, 0xad,
	0x1f, 0x24, 0x0a, 0x0a, 0xa6, 0xbf, 0x24, 0xe4, 0x0e, 0x06, 0xa7, 0xd7, 0xa4, 0x7c, 0x67, 0x22,
	0xa1, 0xbd, 0xea, 0xce, 0x05, 0x2d, 0xbb, 0xa8, 0xc9, 0x0e, 0x8f, 0xb4, 0x5f, 0x77, 0x71, 0x06,
	0xa3, 0x2b, 0xb0, 0x53, 0xc6, 0xc8, 0x10, 0xec, 0x75, 0x24, 0x9a, 0x19, 0x95, 0x47, 0xdf, 0x87,
	0xbe, 0xf9, 0xa1, 0xa4, 0x0b, 0xce, 0xf2, 0x90, 0xe7, 0xc3, 0x3f, 0xf5, 0x49, 0x6e, 0x87, 0xd6,
	0xb4, 0x00, 0xa7, 0x9c, 0x03, 0x99, 0x40, 0xf7, 0x25, 0x5c, 0x2e, 0x56, 0x28, 0x15, 0x19, 0x18,
	0x43, 0x9a, 0xc5, 0xbb, 0xd1, 0x45, 0x4c, 0x9e, 0xc0, 0x9d, 0x25, 0x49, 0xb3, 0x21, 0x37, 0xbf,
	0x4e, 0xf4, 0xd2, 0x3b, 0xbf, 0x87, 0x51, 0xc6, 0x82, 0x8d, 0xe0, 0x71, 0x80, 0x1f, 0xd1, 0x9e,
	0xe7, 0x28, 0xf5, 0x8d, 0xb9, 0xde, 0xe3, 0xa5, 0xb5, 0x6e, 0x57, 0xbb, 0xfd, 0xf0, 0x15, 0x00,
	0x00, 0xff, 0xff, 0xa0, 0x9e, 0xd3, 0x2b, 0xee, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SftpClient is the client API for Sftp service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SftpClient interface {
	GRPCTest(ctx context.Context, in *Ack, opts ...grpc.CallOption) (*Ack, error)
	AddConfig(ctx context.Context, in *SftpTransferConfig, opts ...grpc.CallOption) (*Ack, error)
}

type sftpClient struct {
	cc *grpc.ClientConn
}

func NewSftpClient(cc *grpc.ClientConn) SftpClient {
	return &sftpClient{cc}
}

func (c *sftpClient) GRPCTest(ctx context.Context, in *Ack, opts ...grpc.CallOption) (*Ack, error) {
	out := new(Ack)
	err := c.cc.Invoke(ctx, "/sftpevent.Sftp/GRPCTest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sftpClient) AddConfig(ctx context.Context, in *SftpTransferConfig, opts ...grpc.CallOption) (*Ack, error) {
	out := new(Ack)
	err := c.cc.Invoke(ctx, "/sftpevent.Sftp/AddConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SftpServer is the server API for Sftp service.
type SftpServer interface {
	GRPCTest(context.Context, *Ack) (*Ack, error)
	AddConfig(context.Context, *SftpTransferConfig) (*Ack, error)
}

func RegisterSftpServer(s *grpc.Server, srv SftpServer) {
	s.RegisterService(&_Sftp_serviceDesc, srv)
}

func _Sftp_GRPCTest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ack)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SftpServer).GRPCTest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sftpevent.Sftp/GRPCTest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SftpServer).GRPCTest(ctx, req.(*Ack))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sftp_AddConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SftpTransferConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SftpServer).AddConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sftpevent.Sftp/AddConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SftpServer).AddConfig(ctx, req.(*SftpTransferConfig))
	}
	return interceptor(ctx, in, info, handler)
}

var _Sftp_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sftpevent.Sftp",
	HandlerType: (*SftpServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GRPCTest",
			Handler:    _Sftp_GRPCTest_Handler,
		},
		{
			MethodName: "AddConfig",
			Handler:    _Sftp_AddConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sftpevent.proto",
}
